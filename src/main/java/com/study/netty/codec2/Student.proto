syntax = "proto3"; // 使用的协议版本（jar包版本）
option optimize_for = SPEED;  // 加快解析
option java_package = "com.arc.nio.netty.codec2";// 制定生成的文件保存路径
option java_outer_classname = "StudentPOJO"; // 生成的java文件名

// protocolbuf 可以使用message 管理其他的message
message MyMessage{
  //定义一个枚举类型
  enum DataType{
    StudentType =0;// 在protocol 3版本要求enum的属性编号从0开始
    WorkerType = 1;
  }
  // MyMessage 的第一个属性，1不是指上面的WorkerType
  DataType data_type =1;
  // MyMessage 的第二个属性(表示枚举类型最多只能出现其中的一个，节省空间)
  oneof dataBody{
    Student student = 2;
    Worker worker = 3;
  }
}
// 使用message管理数据
message Student { // 会在StudentPOJO 生成 一个内部类 Student 他是真正发送的POJO对象
  int32 id = 1;
  string name = 2;
  // 这里的1 和 2是属性的序号，不是属性值
}

message Worker{
  string name = 1;
  int32 age = 2;
}